#!/usr/bin/env python
"""
Deletes an account's data permanently.

Includes:
* Data indexed for search (in Elasticsearch).
* Data stored in the blockstore (on disk/ in S3).
* Account liveness/status data (in Redis).
* All data in the database.

USE WITH CAUTION.

"""
import click

from inbox.models.session import session_scope
from inbox.models import Account
from inbox.search.util import delete_index
from inbox.models.roles import delete_blocks
from inbox.models.util import delete_namespace


@click.command()
@click.argument('account_id', type=int)
def delete_account_data(account_id):
    with session_scope() as db_session:
        account = db_session.query(Account).get(account_id)
        email_address = account.email_address

        namespace = account.namespace
        namespace_id = namespace.id
        namespace_public_id = namespace.public_id

        if account.sync_should_run or not account.is_deleted:
            print 'Account with id: {}, email_address: {} and namespace_id: {} '\
                'NOT marked for deletion.\nWill NOT delete, goodbye. '.\
                format(account_id, email_address, namespace_id)

            return

    question = 'Are you sure you want to delete all data for account with '\
               'id: {}, email_address: {} and namespace_id: {}? [yes / no]'.\
               format(account_id, email_address, namespace_id)

    answer = raw_input(question).strip().lower()

    if answer != 'yes':
        print 'Will NOT delete, goodbye.'
        return

    print 'Deleting...'

    # Delete blockstore, search data
    try:
        print 'Deleting search data -'
        delete_index(namespace_id, namespace_public_id)
        print 'Search data deleted.\nDeleting blockstore data -'
        delete_blocks(namespace_id)
        print 'Blockstore data deleted.'
    except Exception as e:
        error = 'Deletion of blockstore data or search data failed! Error: {}'\
            '\nWill NOT delete from database, goodbye.'.format(str(e))

        print error
        return

    # Possible error states here:
    # Some s3 deletions fail -
    # those blocks 'incorrectly' have size=None, sha256=None.
    # So know there's an error but can't recover from it.

    # Delete data in database
    try:
        print 'Deleting database data -'
        delete_namespace(namespace_id)
        print 'Database data deleted'
    except Exception as e:
        print 'Database data deletion failed! Error: {}'.format(str(e))
        return

    # Possible error states here:
    # Namespace deletion fails -
    # Blocks have size=None, sha256=None.
    # That's okay because this account should not be syncing.

    print 'All data deleted successfully!'


if __name__ == '__main__':
    delete_account_data()
